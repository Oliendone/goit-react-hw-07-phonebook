{"version":3,"sources":["components/ContactList/ContactList.module.css","components/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css","components/App.module.css","components/WarningMessage/WarningMessage.module.css","components/WarningMessage/appearMessage.module.css","components/ContactList/contactItemAnimation.module.css","components/AppearHeading.module.css","components/Filter/filterAppear.module.css","components/WarningMessage/WarningMessage.js","redux/contacts/contactsActions.js","redux/contacts/contactsOperations.js","redux/warning/warningMessageActions.js","redux/contacts/contactsSelectors.js","redux/warning/warningMessageSelectors.js","components/ContactForm/ContactForm.js","components/ContactList/ContactItem.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/App.js","redux/contacts/contactsReducers.js","redux/warning/warningMessageReducers.js","redux/store.js","index.js"],"names":["module","exports","WarningMessage","messageText","className","s","textContainer","text","addContactRequest","createAction","addContactSuccess","addContactError","fetchContactsRequest","fetchContactsSuccess","fetchContactsError","deleteContactRequest","deleteContactSuccess","deleteContactError","filterContacts","addContact","name","number","dispatch","contactsActions","axios","post","then","data","catch","error","fetchContacts","get","console","log","deleteContact","id","delete","showMessage","payload","pushWarningMessage","hideMessage","getFilter","state","contacts","filter","getContactsItems","items","getFilteredContacts","createSelector","item","toLowerCase","includes","message","warningMessage","INITIAL_STATE","ContactForm","handleChangeInput","target","value","setState","reset","handleSubmit","e","preventDefault","isInContacts","props","find","contact","warningMessageOn","setTimeout","warningMessageOff","onAddContact","this","phoneBookForm","onSubmit","contactName","nameInput","type","onChange","autoComplete","contactNumber","numberInput","addButton","CSSTransition","in","isWarningMessage","classNames","warning","timeout","unmountOnExit","warningMessageText","Component","mapDispatchToProps","contactsOperations","warningMessageActions","connect","contactsSelectors","warningMessageSelectors","ContactItem","contactItem","onClick","onDelete","TransitionGroup","component","map","key","animation","onChangeFilter","filterWrapper","filterText","filterInput","App","onFetchContacts","wrapperPhonebook","appear","styles","phoneBookHeading","contactsHeading","isContacts","fade","length","itemsReducer","createReducer","contactActions","action","filterReducer","combineReducers","defaultMiddleware","getDefaultMiddleware","store","configureStore","reducer","contactsReducers","middleware","thunk","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.21f08bdb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts\":\"ContactList_contacts__83pvO\",\"contactItem\":\"ContactList_contactItem__361zk\",\"contactName\":\"ContactList_contactName__37Cn0\",\"contactNumber\":\"ContactList_contactNumber__15ESW\",\"deleteContact\":\"ContactList_deleteContact__DcKRN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"phoneBookForm\":\"ContactForm_phoneBookForm__3CLNu\",\"contactName\":\"ContactForm_contactName__9g7g1\",\"contactNumber\":\"ContactForm_contactNumber__19E9r ContactForm_contactName__9g7g1\",\"nameInput\":\"ContactForm_nameInput__oXE_a\",\"numberInput\":\"ContactForm_numberInput__2mLl2 ContactForm_nameInput__oXE_a\",\"addButton\":\"ContactForm_addButton__1GWCb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterText\":\"Filter_filterText__3i2UT ContactForm_contactName__9g7g1\",\"filterInput\":\"Filter_filterInput__2Ac_i ContactForm_nameInput__oXE_a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapperPhonebook\":\"App_wrapperPhonebook__1Noeb\",\"phoneBookHeading\":\"App_phoneBookHeading__3OI-p\",\"contactsHeading\":\"App_contactsHeading__1GMVW App_phoneBookHeading__3OI-p\",\"noDataMessage\":\"App_noDataMessage__28dzl\",\"filterContainer\":\"App_filterContainer__15EiN\",\"contactsOrFilter\":\"App_contactsOrFilter__3H3Fr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textContainer\":\"WarningMessage_textContainer__2xm9-\",\"text\":\"WarningMessage_text__MiFL8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"appearMessage_enter__2ZXCY\",\"enterActive\":\"appearMessage_enterActive__18kgX\",\"exit\":\"appearMessage_exit__1XgKu\",\"exitActive\":\"appearMessage_exitActive__1TE6i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"contactItemAnimation_enter__1gJJm\",\"enterActive\":\"contactItemAnimation_enterActive__3JRIY\",\"exit\":\"contactItemAnimation_exit__31YNH\",\"exitActive\":\"contactItemAnimation_exitActive__3SSXW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appear\":\"AppearHeading_appear__3F77e\",\"appearActive\":\"AppearHeading_appearActive__rCiR_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"filterAppear_enter__1NxaK\",\"enterActive\":\"filterAppear_enterActive__236ZQ\",\"exit\":\"filterAppear_exit__2fYZ6\",\"exitActive\":\"filterAppear_exitActive__3LXMn\"};","import React from 'react';\r\n\r\nimport s from './WarningMessage.module.css';\r\n\r\nexport default function WarningMessage({ messageText }) {\r\n  return (\r\n    <div className={s.textContainer}>\r\n      <p className={s.text}>{messageText}</p>\r\n    </div>\r\n  );\r\n}\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst addContactRequest = createAction('contacts/addRequest');\r\nconst addContactSuccess = createAction('contacts/addSuccess');\r\nconst addContactError = createAction('contacts/addError');\r\n\r\nconst fetchContactsRequest = createAction('contacts/fetchRequest');\r\nconst fetchContactsSuccess = createAction('contacts/fetchSuccess');\r\nconst fetchContactsError = createAction('contacts/fetchError');\r\n\r\nconst deleteContactRequest = createAction('contacts/deleteRequest');\r\nconst deleteContactSuccess = createAction('contacts/deleteSuccess');\r\nconst deleteContactError = createAction('contacts/deleteError');\r\n\r\nconst filterContacts = createAction('phonebook/filterContacts');\r\n\r\nexport default {\r\n  filterContacts,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n};\r\n","import axios from 'axios';\r\nimport contactsActions from './contactsActions';\r\n\r\n// axios.defaults.baseURL = 'http://localhost:3001/contacts';\r\n\r\nconst addContact = (name, number) => dispatch => {\r\n  dispatch(contactsActions.addContactRequest());\r\n\r\n  axios\r\n    .post('http://localhost:3001/contacts', { name, number })\r\n    .then(({ data }) => {\r\n      dispatch(contactsActions.addContactSuccess(data));\r\n    })\r\n    .catch(error => dispatch(contactsActions.addContactError(error)));\r\n};\r\n\r\nconst fetchContacts = () => dispatch => {\r\n  dispatch(contactsActions.fetchContactsRequest());\r\n\r\n  axios\r\n    .get('http://localhost:3001/contacts')\r\n    .then(({ data }) => {\r\n      console.log(data);\r\n      dispatch(contactsActions.fetchContactsSuccess(data));\r\n    })\r\n    .catch(error => dispatch(contactsActions.addContactError(error)));\r\n};\r\n\r\nconst deleteContact = id => dispatch => {\r\n  dispatch(contactsActions.deleteContactRequest());\r\n\r\n  axios\r\n    .delete(`http://localhost:3001/contacts/${id}`)\r\n    .then(() => {\r\n      dispatch(contactsActions.deleteContactSuccess(id));\r\n    })\r\n    .catch(error => dispatch(contactsActions.deleteContactError(error)));\r\n};\r\n\r\nexport default {\r\n  addContact,\r\n  fetchContacts,\r\n  deleteContact,\r\n};\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst showMessage = createAction('warning/showMessage', text => ({\r\n  payload: {\r\n    text,\r\n    pushWarningMessage: true,\r\n  },\r\n}));\r\n\r\nconst hideMessage = createAction('warning/showMessage', text => ({\r\n  payload: {\r\n    text,\r\n    pushWarningMessage: false,\r\n  },\r\n}));\r\n\r\nexport default { showMessage, hideMessage };\r\n","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nconst getFilter = state => state.contacts.filter;\r\n\r\nconst getContactsItems = state => state.contacts.items;\r\n\r\nconst getFilteredContacts = createSelector(\r\n  [getContactsItems, getFilter],\r\n  (items, filter) => {\r\n    return items.filter(item =>\r\n      item.name.toLowerCase().includes(filter.toLowerCase()),\r\n    );\r\n  },\r\n);\r\n\r\n// const getFilteredContacts = state => {\r\n//   const items = getContactsItems(state);\r\n//   const filter = getFilter(state);\r\n\r\n//   return items.filter(item =>\r\n//     item.name.toLowerCase().includes(filter.toLowerCase()),\r\n//   );\r\n// };\r\n\r\nexport default {\r\n  getFilter,\r\n  getContactsItems,\r\n  getFilteredContacts,\r\n};\r\n","const getKnownMessage = state =>\r\n  state.message.warningMessage.pushWarningMessage;\r\n\r\nconst getWarningText = state => state.message.warningMessage.text;\r\n\r\nexport default {\r\n  getWarningText,\r\n  getKnownMessage,\r\n};\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { CSSTransition } from 'react-transition-group';\r\n\r\nimport WarningMessage from '../WarningMessage/WarningMessage';\r\n\r\nimport contactsOperations from '../../redux/contacts/contactsOperations';\r\nimport s from './ContactForm.module.css';\r\nimport { connect } from 'react-redux';\r\nimport warning from '../WarningMessage/appearMessage.module.css';\r\nimport warningMessageActions from '../../redux/warning/warningMessageActions';\r\nimport contactsSelectors from '../../redux/contacts/contactsSelectors';\r\nimport warningMessageSelectors from '../../redux/warning/warningMessageSelectors';\r\n\r\nconst INITIAL_STATE = {\r\n  name: '',\r\n  number: '',\r\n};\r\n\r\nclass ContactForm extends Component {\r\n  static propTypes = {\r\n    name: PropTypes.string,\r\n    number: PropTypes.number,\r\n  };\r\n\r\n  state = { ...INITIAL_STATE };\r\n\r\n  handleChangeInput = ({ target }) => {\r\n    const { name, value } = target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  reset = () => {\r\n    return {\r\n      name: '',\r\n      number: '',\r\n    };\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const isInContacts = this.props.contacts.find(contact => {\r\n      return contact.name.toLowerCase() === this.state.name.toLowerCase();\r\n    });\r\n\r\n    const contactWarning = 'Contact already exist!';\r\n    const numberWarning = 'Please, write a number.';\r\n\r\n    if (isInContacts) {\r\n      this.props.warningMessageOn(contactWarning);\r\n\r\n      setTimeout(() => this.props.warningMessageOff(contactWarning), 3000);\r\n    } else if (this.state.number === '') {\r\n      this.props.warningMessageOn(numberWarning);\r\n\r\n      setTimeout(() => this.props.warningMessageOff(numberWarning), 3000);\r\n    } else {\r\n      this.props.onAddContact(this.state.name, this.state.number);\r\n\r\n      this.setState(this.reset());\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n\r\n    return (\r\n      <>\r\n        <form className={s.phoneBookForm} onSubmit={this.handleSubmit}>\r\n          <label>\r\n            <p className={s.contactName}>Name</p>\r\n            <input\r\n              className={s.nameInput}\r\n              type=\"text\"\r\n              value={name}\r\n              onChange={this.handleChangeInput}\r\n              name=\"name\"\r\n              autoComplete=\"off\"\r\n            />\r\n          </label>\r\n          <label>\r\n            <p className={s.contactNumber}>Number</p>\r\n            <input\r\n              className={s.numberInput}\r\n              type=\"phone\"\r\n              value={number}\r\n              onChange={this.handleChangeInput}\r\n              name=\"number\"\r\n              autoComplete=\"off\"\r\n            />\r\n          </label>\r\n          <button className={s.addButton} type=\"submit\">\r\n            Add contact\r\n          </button>\r\n        </form>\r\n\r\n        <CSSTransition\r\n          in={this.props.isWarningMessage}\r\n          classNames={warning}\r\n          timeout={250}\r\n          unmountOnExit\r\n        >\r\n          <WarningMessage messageText={this.props.warningMessageText} />\r\n        </CSSTransition>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  contacts: contactsSelectors.getContactsItems(state),\r\n  isWarningMessage: warningMessageSelectors.getKnownMessage(state),\r\n  warningMessageText: warningMessageSelectors.getWarningText(state),\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  onAddContact: contactsOperations.addContact,\r\n  warningMessageOn: warningMessageActions.showMessage,\r\n  warningMessageOff: warningMessageActions.hideMessage,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport s from './ContactList.module.css';\r\n\r\nconst ContactItem = ({ name, number, deleteContact }) => {\r\n  return (\r\n    <>\r\n      <li className={s.contactItem}>\r\n        <p className={s.contactName}>{name}</p>\r\n        <p className={s.contactNumber}>{number}</p>\r\n        <button\r\n          className={s.deleteContact}\r\n          type=\"button\"\r\n          onClick={deleteContact}\r\n        >\r\n          Delete\r\n        </button>\r\n      </li>\r\n    </>\r\n  );\r\n};\r\n\r\nContactItem.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\r\n  deleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactItem;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\nimport { connect } from 'react-redux';\r\n\r\nimport ContactItem from './ContactItem';\r\n\r\nimport s from './ContactList.module.css';\r\nimport animation from './contactItemAnimation.module.css';\r\nimport contactsOperations from '../../redux/contacts/contactsOperations';\r\nimport contactsSelectors from '../../redux/contacts/contactsSelectors';\r\n\r\nconst ContactList = ({ contacts, onDelete }) => {\r\n  return (\r\n    <div>\r\n      <TransitionGroup component=\"ul\" className={s.contacts}>\r\n        {contacts.map(({ id, name, number }) => (\r\n          <CSSTransition key={id} timeout={250} classNames={animation}>\r\n            <ContactItem\r\n              key={id}\r\n              name={name}\r\n              number={number}\r\n              deleteContact={() => onDelete(id)}\r\n            />\r\n          </CSSTransition>\r\n        ))}\r\n      </TransitionGroup>\r\n    </div>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.objectOf(\r\n      PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n    ),\r\n  ).isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  contacts: contactsSelectors.getFilteredContacts(state),\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  onDelete: contactsOperations.deleteContact,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport s from './Filter.module.css';\r\nimport contactsActions from '../../redux/contacts/contactsActions';\r\nimport { connect } from 'react-redux';\r\nimport contactsSelectors from '../../redux/contacts/contactsSelectors';\r\n\r\nconst Filter = ({ value, onChangeFilter }) => {\r\n  return (\r\n    <div className={s.filterWrapper}>\r\n      <p className={s.filterText}>Find contact by name</p>\r\n      <input\r\n        className={s.filterInput}\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={e => onChangeFilter(e.target.value)}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChangeFilter: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  value: contactsSelectors.getFilter(state),\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  onChangeFilter: contactsActions.filterContacts,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React, { Component } from 'react';\r\nimport { CSSTransition } from 'react-transition-group';\r\n\r\nimport ContactForm from './ContactForm/ContactForm';\r\nimport ContactList from './ContactList/ContactList';\r\nimport Filter from './Filter/Filter';\r\n\r\nimport s from './App.module.css';\r\nimport styles from './AppearHeading.module.css';\r\nimport fade from '../components/Filter/filterAppear.module.css';\r\nimport { connect } from 'react-redux';\r\nimport contactsOperations from '../redux/contacts/contactsOperations';\r\nimport contactsSelectors from '../redux/contacts/contactsSelectors';\r\n\r\nclass App extends Component {\r\n  componentDidMount() {\r\n    this.props.onFetchContacts();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className={s.wrapperPhonebook}>\r\n          <CSSTransition\r\n            in={true}\r\n            appear={true}\r\n            classNames={styles}\r\n            timeout={500}\r\n            unmountOnExit\r\n          >\r\n            <h1 className={s.phoneBookHeading}>Phonebook</h1>\r\n          </CSSTransition>\r\n          <ContactForm />\r\n          <h2 className={s.contactsHeading}>Contacts</h2>\r\n          <CSSTransition\r\n            in={this.props.isContacts}\r\n            classNames={fade}\r\n            timeout={250}\r\n            unmountOnExit\r\n          >\r\n            <Filter />\r\n          </CSSTransition>\r\n        </div>\r\n        <ContactList />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  isContacts: contactsSelectors.getContactsItems(state).length > 0,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  onFetchContacts: contactsOperations.fetchContacts,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport contactActions from './contactsActions';\r\n\r\nconst addContact = (state, action) => [...state, action.payload];\r\n\r\nconst deleteContact = (state, action) =>\r\n  state.filter(item => item.id !== action.payload);\r\n\r\nconst itemsReducer = createReducer([], {\r\n  [contactActions.addContactSuccess]: addContact,\r\n  [contactActions.deleteContactSuccess]: deleteContact,\r\n  [contactActions.fetchContactsSuccess]: (state, action) => action.payload,\r\n});\r\n\r\nconst filterReducer = createReducer('', {\r\n  [contactActions.filterContacts]: (state, action) => action.payload,\r\n});\r\n\r\nexport default combineReducers({ items: itemsReducer, filter: filterReducer });\r\n\r\n//\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport warningMessageActions from './warningMessageActions';\r\n\r\nconst warningMessage = createReducer(\r\n  {},\r\n  {\r\n    [warningMessageActions.showMessage]: (state, action) => {\r\n      return action.payload;\r\n    },\r\n    [warningMessageActions.hideMessage]: (state, action) => {\r\n      return action.payload;\r\n    },\r\n  },\r\n);\r\n\r\nexport default combineReducers({ warningMessage });\r\n","import contactsReducers from './contacts/contactsReducers';\r\nimport warningMessage from './warning/warningMessageReducers';\r\nimport thunk from 'redux-thunk';\r\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\n\r\nconst defaultMiddleware = getDefaultMiddleware();\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: contactsReducers,\r\n    message: warningMessage,\r\n  },\r\n  middleware: [...defaultMiddleware, thunk],\r\n});\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport App from './components/App';\nimport store from './redux/store';\n\nimport './base.css';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.querySelector('#root'),\n);\n"],"sourceRoot":""}